--idx_bloat
SELECT
    nspname AS schema_name,
    idxname AS index_name,
    tblname AS table_name,
    pg_size_pretty(pg_relation_size(indexrelid)) AS index_size,
    round(100 * bloat_ratio, 2) AS bloat_percent,
    pg_size_pretty(bloat_size) AS bloat_size,
    CASE WHEN idx_scan = 0 THEN 'Never Used' ELSE 'Used' END AS usage
FROM (
    SELECT
        n.nspname,
        idx.relname AS idxname,
        tbl.relname AS tblname,
        idx.reltuples,
        idx.relpages,
        idx.relam,
        tbl.relpages AS tbl_pages,
        idx.relpages::float / tbl.relpages AS bloat_ratio,
        (idx.relpages - (idx.reltuples * (8 + 24) / (current_setting('block_size')::integer) + 1)) * current_setting('block_size')::integer AS bloat_size,
        idx.relpages,
        idx.oid AS indexrelid,
        (SELECT idx_scan FROM pg_stat_user_indexes WHERE indexrelid = idx.oid) AS idx_scan
    FROM
        pg_index i
        JOIN pg_class idx ON idx.oid = i.indexrelid
        JOIN pg_class tbl ON tbl.oid = i.indrelid
        JOIN pg_namespace n ON n.oid = tbl.relnamespace
    WHERE
        idx.relpages > 0
        AND tbl.relpages > 0
        AND n.nspname NOT IN ('pg_catalog', 'information_schema')
) AS sub
WHERE bloat_ratio > 0.3  -- Фильтр: показывать индексы с bloat > 30%
ORDER BY bloat_percent DESC;



--tbl_bloat
SELECT
    nspname AS schema_name,
    relname AS table_name,
    pg_size_pretty(total_bytes) AS table_size,
    pg_size_pretty(bloat_bytes) AS bloat_size,
    round(100 * bloat_ratio, 2) AS bloat_percent,
    n_live_tup AS live_rows,
    n_dead_tup AS dead_rows
FROM (
    SELECT
        n.nspname,
        t.relname,
        pg_total_relation_size(t.oid) AS total_bytes,
        pg_stat_get_live_tuples(t.oid) AS n_live_tup,
        pg_stat_get_dead_tuples(t.oid) AS n_dead_tup,
        (pg_total_relation_size(t.oid) - (pg_relation_size(t.oid)) AS bloat_bytes,
        (1 - (pg_relation_size(t.oid)::float / NULLIF(pg_total_relation_size(t.oid), 0)) AS bloat_ratio
    FROM
        pg_class t
        JOIN pg_namespace n ON n.oid = t.relnamespace
    WHERE
        t.relkind = 'r'
        AND n.nspname NOT IN ('pg_catalog', 'information_schema')
) AS sub
WHERE bloat_ratio > 0.2  -- Фильтр: показывать таблицы с bloat > 20%
ORDER BY bloat_bytes DESC;
